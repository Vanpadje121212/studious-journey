<%
script = script_version.script
version_param = nil unless defined?(version_param)
format_override = nil unless defined?(format_override)
install_as_js = script.js? || format_override == 'js'
code_url = if install_as_js
  version_param.nil? ? user_js_script_path(script, name: script.url_name, locale_override: nil) : "#{user_js_script_path(script, version: version_param, name: script.url_name, locale_override: nil)}&d=.user.js"
else
  version_param.nil? ? user_css_script_path(script, name: script.url_name, locale_override: nil) : "#{user_css_script_path(script, version: version_param, name: script.url_name, locale_override: nil)}&d=.user.css"
           end
%>
<%= link_to install_as_js ? t('scripts.install') : 'Install as user style', code_url, {
  class: 'install-link',
  'data-install-format' => install_as_js ? 'js' : 'css',
  'data-ping-url' => install_ping_script_path(script, authenticity_token: session[:_csrf_token], locale_override: nil),
  'data-ip-address' => request.remote_ip,
  'data-script-id' => script.id,
  'data-ping-key' => install_keys.first,
  'data-is-previous-version' => version_param.present?,
  'data-previous-version-warning' => t('scripts.old_version_warning'),
  rel: 'nofollow',
  'data-script-name' => script.default_name,
  'data-script-namespace' => script.namespace,
  'data-script-version' => script_version.version,
  'data-update-label' => t('scripts.update', version: script_version.version),
  'data-downgrade-label' => t('scripts.downgrade', version: script_version.version),
  'data-reinstall-label' => t('scripts.reinstall', version: script_version.version),
} -%>
