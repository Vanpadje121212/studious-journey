<%= form_tag(dismiss_report_path(report, index: i), method: 'POST', class: 'report-resolution-options') do %>
  <%= text_area_tag :moderator_notes, nil, rows: 3, placeholder: 'Moderator notes (optional)' %>
  <br>

  <%= submit_tag 'Dismiss report' %>
<% end %>
<% if report.reason != Report::REASON_WRONG_CATEGORY %>
  <%= form_tag(mark_fixed_report_path(report, index: i), method: 'POST', class: 'report-resolution-options') do %>
    <%= text_area_tag :moderator_notes, nil, rows: 3, placeholder: 'Moderator notes (optional)' %>
    <br>

    <%= submit_tag 'Mark as fixed' %>
  <% end %>
<% end %>
<% if report.awaiting_response? %>
  <p class="report-resolution-options">(Waiting for response, cannot delete yet.)</p>
<% else %>
  <%= form_tag(uphold_report_path(report, index: i), method: 'POST', class: 'report-resolution-options') do %>
    <%= text_area_tag :moderator_notes, nil, rows: 3, placeholder: 'Moderator notes (optional)' %>
    <br>

    <% if report.reason != Report::REASON_WRONG_CATEGORY %>
      <% if report.item.is_a?(Script) && report.unauthorized_code? %>
        <%= check_box_tag :redirect, '1', false, id: "redirect-#{report.id}" %><%= label_tag "redirect-#{report.id}", "Redirect and update users to original" %><br>
      <% end %>

      <% other_comments = report.reported_users.map{|user| comments = user.comments.not_deleted; comments = comments.where.not(id: report.item.id) if report.item.is_a?(Comment); [user, comments.count] }.to_h
         if other_comments.values.sum > 0 %>
        <%= check_box_tag :delete_comments, '1', false, id: "delete-comments-#{report.id}" %><%= label_tag "delete-comments-#{report.id}", "Delete #{other_comments.select{|_user, count| count > 0}.map{|user, comments_count| "#{user.name}'s #{comments_count} #{(report.item.is_a?(Comment) ? 'other comment' : 'comment').pluralize(comments_count)}" }.to_sentence}" %><br>
      <% end %>

      <% other_scripts = report.reported_users.map{|user| scripts = user.scripts.not_deleted; scripts = scripts.where.not(id: report.item.id) if report.item.is_a?(Script); [user, scripts.count] }.to_h
         if other_scripts.values.sum > 0 %>
        <%= check_box_tag :delete_scripts, '1', false, id: "delete-scripts-#{report.id}" %><%= label_tag "delete-scripts-#{report.id}", "Delete #{other_scripts.select{|_user, count| count > 0}.map{|user, scripts_count| "#{user.name}'s #{scripts_count} #{(report.item.is_a?(Script) ? 'other script' : 'script').pluralize(scripts_count)}" }.to_sentence}" %><br>
      <% end %>

      <% if [Comment, Discussion, Script].any? {|klass| report.item.is_a?(klass)} && report.reported_users.reject(&:banned?).any? %>
        <%= check_box_tag :ban, '1', false, id: "ban-#{report.id}" %><%= label_tag "ban-#{report.id}", "Ban #{report.reported_users.reject(&:banned?).map(&:name).to_sentence}" %><br>
      <% end %>
    <% end %>

    <% case report.item %>
    <% when User %>
      <%= submit_tag "Ban #{report.reported_users.first.name}" %>
    <% when Discussion %>
      <%= submit_tag(report.reason == Report::REASON_WRONG_CATEGORY ? "Move discussion to #{report.discussion_category.localized_name}" : 'Delete discussion') %>
    <% when Comment %>
      <%= submit_tag('Delete comment') %>
    <% when Script %>
      <%= submit_tag(t('reports.delete_script')) %>
    <% when Message %>
      <% if report.reported_users.any? %>
        <%= submit_tag("Ban #{report.reported_users.first.name}") %>
      <% else %>
        <%= submit_tag('Resolve (user has been deleted)') %>
      <% end %>
    <% else
         raise "Unknown item #{report.item}"
       end %>

    <% if report.reason == Report::REASON_SPAM %>
      <%= submit_tag('Nuke user', name: 'nuke') %>
    <% end %>

   <% end %>
<% end %>