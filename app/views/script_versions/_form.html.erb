<p>
	Scripts must be <strong>properly described</strong>, cannot be <strong>obfuscated</strong> or <strong>minified</strong>, must respect <strong>copyright</strong>, and are limited in the <strong>external code</strong> used. <%=link_to 'Read the full rules.', help_code_rules_path%>
</p>

<% if !script_version.script.script_sync_type_id.nil? %>
	<p>This script is <%=link_to("set to sync #{script_version.script.script_sync_type_id == 1 ? 'manually' : 'automatically'} from #{script_version.script.script_sync_source_id == 2 ? 'userscripts.org' : script_version.script.sync_identifier}", script_sync_path(script_version.script_id))%>. Any updates you make to the code here will be overwritten when syncing.</p>
<% end %>

<%=form_for(script_version.script.new_record? ? script_version : [script_version.script, script_version], {:html => {:enctype => 'multipart/form-data'}}) do |s|%>
	<% disallowed_requires = script_version.disallowed_requires_used

	if !script_version.errors.empty? or !script_version.script.errors.empty? %>
		<p><%=t('common.error_preamble')%></p>
		<ul class="errors">
			<% using_disallowed_require = false
			version_not_incremented = false
			version_not_specified = false
			namespace_is_missing = false
			namespace_changed = false
			minified_code = false
			script_version.errors.full_messages.each do |m| 
				# skip some validations in favour of below
				if m.include?('Code cannot @require') and !disallowed_requires.empty?
					using_disallowed_require = true
				elsif m.include?('was not incremented')
					version_not_incremented = true
				elsif m.include?('Version meta key must be provided')
					version_not_specified = true
				elsif m.include?('namespace is missing')
					namespace_is_missing = true
				elsif m.include?('namespace has changed')
					namespace_changed = true
				elsif m.include?('appears to be minified')
					minified_code = true
				else %>
					<li><%=m%></li>
				<% end
			end
			script_version.script.errors.full_messages.each do |m| %>
				<li><%=m%></li>
			<% end
			if using_disallowed_require %>
				<li>You are using <code>@require</code>s outside of Greasy Fork's whitelist: <%=disallowed_requires.join(', ')%>. Please read <%=link_to 'Greasy Fork\'s policy on external scripts.', help_external_scripts_path(), {:target => 'code_rules'}%>. You can save your script anyway by checking <label for="script_version_accepted_assessment">this box</label> <%=s.check_box(:accepted_assessment, {}, true, false)%>; however, your script will not be installable by others until the external script issue is resolved.</li>
			<% end
			if version_not_incremented %>
				<li>You updated the code but didn't increase the <code>@version</code> number. This means anyone who previously installed your script may not get the updated code. <label for="script_version_version_check_override">Save anyway?</label> <%=s.check_box(:version_check_override, {}, true, false)%></li>
			<% end 
			if version_not_specified %>
				<li>You didn't provide a <code>@version</code>. Version meta keys are important because it lets people who install your script receive updates. Specify a version or <label for="script_version_add_missing_version">check this box</label> <%=s.check_box(:add_missing_version, {}, true, false)%> to have the site generate one for you.</li>
			<% end
			if namespace_is_missing %>
				<li>You didn't provide a <code>@namespace</code>. Namespace meta keys are important because it makes a re-install of your script be considered an update. Specify a namespace or <label for="script_version_add_missing_namespace">check this box</label> <%=s.check_box(:add_missing_namespace, {}, true, false)%> to have the site generate one for you.</li>
			<% end 
			if namespace_changed %>
				<li>Your <code>@namespace</code> has changed. A consistent namespace is important for a re-install of your script be considered an update. <label for="script_version_namespace_check_override">Save anyway?</label> <%=s.check_box(:namespace_check_override, {}, true, false)%></li>
			<% end
			if minified_code %>
				<li>Your script looks like it might contain minified (compressed) code, which isn't allowed. If you're using a minified library, please instead <code>@require</code> it from <%=link_to "one of these places", help_external_scripts_path()%>. If your code isn't minified, <label for="script_version_minified_confirmation">check this box</label> <%=s.check_box(:minified_confirmation, {}, true, false)%>.</li>
			<% end %>
		</ul>
	<% end %>

	<% if @script.library? %>
		<div class="form-control">
			<label for="library-name">Name</label><br>
			<input id="library-name" name="name" value="<%=@script.name%>" maxlength="100">
		</div>
		<div class="form-control">
			<label for="library-description">Description</label><br>
			<input id="library-description" name="description" value="<%=@script.description%>" maxlength="500">
		</div>
	<% end %>
	<div class="form-control">
		<label for="code">Code</label><br>
		<%=s.text_area(:code)%>
		<div>Or upload: <input type="file" name="code_upload" id="code-upload" accept="text/javascript,application/javascript"></div>
	</div>
	<% if !script_version.script.new_record? %>
		<div class="form-control">
			<label for="changelog">Changelog</label> <span class="label-note">What's changed in this version?</span><br>
			<%=s.text_field(:changelog, :maxlength => 500, :size => nil)%>
		</div>
	<% end %>
	<div class="form-control radio-group">
		<label>Script type</label><br>
		<% ScriptType.all.each do |st| %>
			<%=radio_button('script', 'script_type_id', st.id)%> <label class="radio-label" for="script_script_type_id_<%=st.id%>"><%=st.name%> - <%=st.description%></label><br>
		<% end %>
	</div>
	<div class="form-control radio-group">
		<label><%=t('activerecord.attributes.script.locale')%></label> <span class="label-note"><%=t('scripts.locale_explanation')%></span><br>
		<select name="script[locale_id]">
			<option value="" <%if @script.locale_id.nil?%>selected<%end%>><%=t('scripts.locale_auto_select')%></option>
			<option disabled>---</option>
			<% Locale.where(:ui_available => true).each do |locale| %>
				<option value="<%=locale.id%>" <%if @script.locale_id == locale.id%>selected<%end%>><%=locale.display_text%></option>
			<% end %>
			<option disabled>---</option>
			<% Locale.all.each do |locale| %>
				<option value="<%=locale.id%>"<%if @script.locale_id == locale.id%>selected<%end%>><%=locale.display_text%></option>
			<% end %>
		</select>
	</div>
	<div class="form-control">
		<label for="additional-info">Additional info</label>
		<span class="label-note">
			Ramble on about your script. <%=link_to t('common.allowed_elements_link'), help_allowed_markup_path, {:target => 'markup_choice'}%>
			<%=s.radio_button(:additional_info_markup, 'html')%>HTML
			<%=s.radio_button(:additional_info_markup, 'markdown')%><%=link_to 'Markdown', 'http://daringfireball.net/projects/markdown/basics', {:target => 'markup_choice'}%>
			<button name="preview" id="preview-script-additional-info" class="preview-button">Preview</button>
		</span><br>
		<%=s.text_area(:additional_info, {:class => 'previewable', 'data-preview-activate-id' => 'preview-script-additional-info', 'data-markup-option-name' => 'script_version[additional_info_markup]', 'data-preview-result-id' => 'preview-script-additional-info-results'})%>
		<div id="preview-script-additional-info-results" class="preview-result" <%if !@preview.nil?%>style="display:block"<%end%>>
			<%if !@preview.nil?%><%=@preview.html_safe%><%end%>
		</div>
	</div>
	<%=s.submit(script_version.script.new_record? ? 'Post script' : 'Post new version')%>
<% end %>
